"use strict";(self.webpackChunkminecraft_plugin_docs=self.webpackChunkminecraft_plugin_docs||[]).push([[204],{2603:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>v,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"api-events","title":"Events","description":"Overview","source":"@site/docs/api-events.md","sourceDirName":".","slug":"/api-events","permalink":"/api-events","draft":false,"unlisted":false,"editUrl":"https://github.com/AdvancedArmorStands/Docs/tree/main/docs/api-events.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"id":"api-events","title":"Events","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Api Introduction","permalink":"/api-introduction"},"next":{"title":"Creating an ArmorStand","permalink":"/api-creating-an-armorstand"}}');var a=r(4848),s=r(8453);const i={id:"api-events",title:"Events",sidebar_position:6},d=void 0,o={},c=[{value:"Overview",id:"overview",level:2},{value:"Event List",id:"event-list",level:2},{value:"<code>ArmorStandCreateEvent</code>",id:"armorstandcreateevent",level:3},{value:"<code>ArmorStandDeleteEvent</code>",id:"armorstanddeleteevent",level:3},{value:"<code>PlayerMoveArmorStandEvent</code>",id:"playermovearmorstandevent",level:3},{value:"<code>ArmorStandRenameEvent</code>",id:"armorstandrenameevent",level:3},{value:"<code>ArmorStandStateChangeEvent</code>",id:"armorstandstatechangeevent",level:3},{value:"<code>ActionTriggerEvent</code>",id:"actiontriggerevent",level:3},{value:"<code>ArmorStandOptionChangeEvent</code>",id:"armorstandoptionchangeevent",level:3}];function l(e){const n={br:"br",code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsxs)(n.p,{children:["All events are part of the ",(0,a.jsx)(n.code,{children:"com.parsa3323.aas.api.events"})," package.",(0,a.jsx)(n.br,{}),"\n","They can be listened to like any other Bukkit event:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@EventHandler\r\npublic void onCreate(ArmorStandCreateEvent event) {\r\n    Bukkit.getLogger().info("Armor stand created: " + event.getArmorStand().getName());\r\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Make sure your plugin declares a dependency or soft-dependency on ",(0,a.jsx)(n.code,{children:"AdvancedArmorStands"})," in your ",(0,a.jsx)(n.code,{children:"plugin.yml"})," so the API is loaded before your plugin."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"event-list",children:"Event List"}),"\n",(0,a.jsx)(n.h3,{id:"armorstandcreateevent",children:(0,a.jsx)(n.code,{children:"ArmorStandCreateEvent"})}),"\n",(0,a.jsxs)(n.p,{children:["Triggered when a user ",(0,a.jsx)(n.strong,{children:"creates a new armor stand"})," using the plugin.\r\nYou can access the creator, the armor stand\u2019s name, and its data."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"armorstanddeleteevent",children:(0,a.jsx)(n.code,{children:"ArmorStandDeleteEvent"})}),"\n",(0,a.jsxs)(n.p,{children:["Triggered when a user ",(0,a.jsx)(n.strong,{children:"deletes an armor stand"}),"."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"playermovearmorstandevent",children:(0,a.jsx)(n.code,{children:"PlayerMoveArmorStandEvent"})}),"\n",(0,a.jsxs)(n.p,{children:["Triggered when a player ",(0,a.jsx)(n.strong,{children:"moves"})," an armor stand."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"armorstandrenameevent",children:(0,a.jsx)(n.code,{children:"ArmorStandRenameEvent"})}),"\n",(0,a.jsxs)(n.p,{children:["Triggered when a user ",(0,a.jsx)(n.strong,{children:"renames"})," an armor stand."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"armorstandstatechangeevent",children:(0,a.jsx)(n.code,{children:"ArmorStandStateChangeEvent"})}),"\n",(0,a.jsxs)(n.p,{children:["Triggered when an armor stand\u2019s ",(0,a.jsx)(n.strong,{children:"state"})," changes (for example, visibility, size, or gravity)."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"actiontriggerevent",children:(0,a.jsx)(n.code,{children:"ActionTriggerEvent"})}),"\n",(0,a.jsxs)(n.p,{children:["Triggered whenever an ",(0,a.jsx)(n.strong,{children:"action"})," linked to an armor stand is called."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"armorstandoptionchangeevent",children:(0,a.jsx)(n.code,{children:"ArmorStandOptionChangeEvent"})}),"\n",(0,a.jsxs)(n.p,{children:["Triggered when a user ",(0,a.jsx)(n.strong,{children:"changes an armor stand\u2019s option"}),", such as toggling arms, base plate, or visibility."]}),"\n",(0,a.jsx)(n.hr,{})]})}function v(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>d});var t=r(6540);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);